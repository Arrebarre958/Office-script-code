function main(workbook: ExcelScript.Workbook) {
  let proofreadSheets: ExcelScript.Worksheet[] = [
    workbook.getWorksheet("Proofread English"),
    workbook.getWorksheet("Proofread French"),
    workbook.getWorksheet("Proofread German")
  ];
  let masterSheet: ExcelScript.Worksheet = workbook.getWorksheet("MasterFileEnglish");

  if (proofreadSheets.includes(undefined) || !masterSheet) {
    console.log("One or more sheets not found.");
    return;
  }

  let masterRange = masterSheet.getUsedRange();
  if (!masterRange) return;

  let masterValues = masterRange.getValues();
  let masterHeaders = masterValues[0].map(h => h.toString().trim());
  let masterColIndex = masterHeaders.indexOf("Model #/Status");

  if (masterColIndex === -1) {
    console.log("Required column 'Model #/Status' not found in master sheet.");
    return;
  }

  function cleanValue(value: string | number | boolean): string {
    return value ? value.toString().trim().replace(/\/Project Manager/g, '').trim() : "";
  }

  let masterModelNumbers = masterValues.slice(1).map(row => cleanValue(row[masterColIndex]));

  proofreadSheets.forEach(sheet => {
    let sheetRange = sheet.getUsedRange();
    if (!sheetRange) return;

    let sheetValues = sheetRange.getValues();
    let sheetHeaders = sheetValues[0].map(h => h.toString().trim());
    let sheetModelIndex = sheetHeaders.indexOf("Model #/Status");
    let sheetProofreadIndex = sheetHeaders.indexOf("Proofread?");

    if (sheetModelIndex === -1) {
      console.log(`Column 'Model #/Status' not found in ${sheet.getName()}`);
      return;
    }

    // Add "Proofread?" column if missing
    if (sheetProofreadIndex === -1) {
      sheet.getRangeByIndexes(0, sheetHeaders.length, 1, 1).setValues([["Proofread?"]]);
      sheetHeaders.push("Proofread?");
    }

    const updatedSheetRange = sheet.getUsedRange();
    const updatedValues = updatedSheetRange.getValues();
    const updatedProofreadIndex = sheetHeaders.indexOf("Proofread?");
    let existingModels = new Set(updatedValues.slice(1).map(row => cleanValue(row[sheetModelIndex])));

    let firstEmptyRow = updatedValues.findIndex((row, index) => index > 0 && !row[sheetModelIndex]);
    if (firstEmptyRow === -1) firstEmptyRow = updatedValues.length;

    let newRows: (string | number | boolean)[][] = [];

    masterValues.slice(1).forEach(row => {
      const modelNumber = cleanValue(row[masterColIndex]);
      if (modelNumber && !existingModels.has(modelNumber)) {
        let newRow: (string | number | boolean)[] = new Array(sheetHeaders.length).fill("");

        masterHeaders.forEach((header, i) => {
          let colIndex = sheetHeaders.indexOf(header);
          if (colIndex !== -1) newRow[colIndex] = row[i];
        });

        newRow[updatedProofreadIndex] = "No";
        newRows.push(newRow);
        existingModels.add(modelNumber);
      }
    });

    if (newRows.length > 0) {
      sheet.getRangeByIndexes(firstEmptyRow, 0, newRows.length, sheetHeaders.length).setValues(newRows);
    }

    // âœ… Final Check: Force rewrite of "Proofread?" column to help Power Automate commit
    const latestRange = sheet.getUsedRange();
    const latestValues = latestRange.getValues();

    for (let i = 1; i < latestValues.length; i++) {
      if (!latestValues[i][updatedProofreadIndex]) {
        latestValues[i][updatedProofreadIndex] = "No";
      }
    }

    latestRange.setValues(latestValues); // Force Excel to register changes
  });
}
