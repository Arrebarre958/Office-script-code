function main(workbook: ExcelScript.Workbook) {
	let proofreadSheet = workbook.getWorksheet("Proofread french");
	let masterSheet = workbook.getWorksheet("MasterFileEnglish");

	if (!proofreadSheet || !masterSheet) {
		return;
	}

	let proofreadRange = proofreadSheet.getUsedRange();
	let masterRange = masterSheet.getUsedRange();
	if (!proofreadRange || !masterRange) return;

	let proofreadValues = proofreadRange.getValues();
	let masterValues = masterRange.getValues();

	function normalizeHeader(header: string | number | boolean): string {
		return header.toString().trim().replace(/\s+/g, " ").toLowerCase();
	}

	function normalizeValue(value: string | number | boolean): string {
		return value ? value.toString().trim().replace(/\/Project Manager/g, '').replace(/\s+/g, " ") : "";
	}

	let proofreadHeaders = proofreadValues[0].map(header => normalizeHeader(header));
	let masterHeaders = masterValues[0].map(header => normalizeHeader(header));

	let proofreadKeyCol = proofreadHeaders.indexOf("model #/status");
	let masterKeyCol = masterHeaders.indexOf("model #/status");
	let proofreadStatusCol = proofreadHeaders.indexOf("proofread?");

	if (proofreadKeyCol === -1 || masterKeyCol === -1 || proofreadStatusCol === -1) {
		return;
	}

	let masterIndexMap = new Map<string, number>();
	for (let i = 1; i < masterValues.length; i++) {
		let key = normalizeValue(masterValues[i][masterKeyCol]);
		if (key) {
			masterIndexMap.set(key, i);
		}
	}

	for (let i = 1; i < proofreadValues.length; i++) {
		let statusValue = normalizeValue(proofreadValues[i][proofreadStatusCol]).toLowerCase();
		if (statusValue !== "no") continue;

		let proofreadKey = normalizeValue(proofreadValues[i][proofreadKeyCol]);
		if (!proofreadKey || !masterIndexMap.has(proofreadKey)) {
			continue;
		}

		let masterRow = masterValues[masterIndexMap.get(proofreadKey)!];

		for (let j = 0; j < proofreadHeaders.length; j++) {
			let cell = proofreadSheet.getCell(i, j);
			let fillColor = cell.getFormat().getFill().getColor();

			if (fillColor?.toLowerCase() === "#ff0000" || fillColor?.toLowerCase() === "#ffff0000") {
				let columnName = proofreadHeaders[j];
				let masterColIndex = masterHeaders.indexOf(columnName);

				if (masterColIndex !== -1) {
					let masterValue = masterRow[masterColIndex];

					if (typeof masterValue === "string" && masterValue.startsWith("=")) {
						cell.setNumberFormat("@");
						cell.setValue(`'${masterValue}`);
					} else {
						cell.setNumberFormat("@");
						cell.setValue(masterValue);
					}
				}
			}
		}
	}
}
